name: Nightly Package Update
on:
  schedule:
    - cron: '15 1 * * * '
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  regenerate:
    name: Regenerate nix package index
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name:  Nix packages
        uses: ahobson/cache-install@adh-nix-version
        with:
          key: nix-${{ hashFiles('nix/default.nix') }}
          nix_file: 'nix/default.nix'
          nix_version: https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn --prefer-offline

      - uses: actions/cache@v2
        id: nixpkgs-unstable-cache
        with:
          path: nixpkgs-cache
          key: ${{ runner.os }}-nixpkgs-${{ hashFiles('nixpkgs-cache/.git/index') }}
          restore-keys: |
            ${{ runner.os }}-nixpkgs-unstable-cache-

      - name: Checkout nixpkgs
        run: >-
          mkdir -p nixpkgs-cache &&
          cd nixpkgs-cache &&
          test -d nixpkgs ||
          git clone --depth 1 https://github.com/NixOS/nixpkgs.git -b nixpkgs-unstable

      - name: Run Regenerate
        run: |
          ./node_modules/.bin/ts-node bin/regenerate.ts
        env:
          NIXPKGS_DIR: nixpkgs-cache/nixpkgs

      - name: Test build
        if: ${{ github.ref != 'refs/head/main' }}
        run: |
          yarn build

      - name: Publish to pages
        if: ${{ github.ref == 'refs/head/main' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          yarn deploy
